name: master

on:
  push:
    branches: [master]

jobs:
  set-version:
    runs-on: windows-2022
    outputs:
      version: ${{ steps.props.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            buildprops:
              - 'Directory.Build.props'
      - name: Update version
        if: steps.changes.outputs.buildprops == 'false'
        run: |
          (Get-Content Directory.Build.props) | % { 
              $m = [regex]::match($_, '<Version>(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?</Version>');
              if(!$m.Success -or $m.Groups[4].Success -or $m.Groups[5].Success) { $_; }
              else { $_ -replace $m.Value, ("<Version>{0}.{1}.{2}-pre${{ github.run_number }}</Version>" -f $m.Groups[1].Value,$m.Groups[2].Value,([convert]::ToInt32($m.Groups[3].Value)+1)); }
          } | Set-Content Directory.Build.props
      - name: Output build props
        id: props
        run: |
          "version=$(([xml](Get-Content Directory.Build.props)).Project.PropertyGroup.Version)" >> $env:GITHUB_OUTPUT

  build:
    strategy:
      matrix:
        platform: [x64, x86]
        framework: [net472, netstandard2.0, net8.0, net9.0]
    runs-on: windows-2022
    needs: set-version
    env:
      LHM_VER: ${{ needs.set-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: nuget/setup-nuget@v2
      - uses: microsoft/setup-msbuild@v1.1
        with:
          msbuild-architecture: x64

      - name: Build library ${{ matrix.framework }} ${{ matrix.platform }}
        run: dotnet build LibreHardwareMonitorLib\LibreHardwareMonitorLib.csproj -c Release -p:Platform=${{ matrix.platform }} -f ${{ matrix.framework }} -p:Version=$env:LHM_VER

      - name: Publish library ${{ matrix.framework }} ${{ matrix.platform }}
        uses: actions/upload-artifact@v4
        with:
          name: LibreHardwareMonitorLib-${{ matrix.framework }}-${{ matrix.platform }}
          path: |
            bin/Release/

      - name: Build application
        if: matrix.platform == 'x64' && matrix.framework == 'net472'
        run: dotnet build LibreHardwareMonitor\LibreHardwareMonitor.csproj -c Release -p:Platform=${{ matrix.platform }} -p:Version=$Env:LHM_VER

      - name: Publish application
        if: matrix.platform == 'x64' && matrix.framework == 'net472'
        uses: actions/upload-artifact@v4
        with:
          name: LibreHardwareMonitor
          path: |
            bin/Release/net472

  pack:
    runs-on: windows-2022
    needs: [set-version, build]
    env:
      LHM_VER: ${{ needs.set-version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
      - uses: nuget/setup-nuget@v2
      - uses: microsoft/setup-msbuild@v1.1
        with:
          msbuild-architecture: x64

      - name: restore
        run: dotnet restore LibreHardwareMonitorLib\LibreHardwareMonitorLib.csproj

      - uses: actions/download-artifact@v5
        with:
          path: bin/Release
          merge-multiple: true

      - name: Build reference libraries
        run: dotnet build LibreHardwareMonitorLib\LibreHardwareMonitorLib.csproj -c Release -p:Platform=AnyCPU -p:Version=$env:LHM_VER

      - name: Pack nuget package
        run: dotnet pack LibreHardwareMonitorLib\LibreHardwareMonitorLib.csproj -c Release --no-build --output bin\Release -p:Version=$Env:LHM_VER

      - name: Publish nupkg
        uses: actions/upload-artifact@v4
        with:
          name: LibreHardwareMonitorLib-nupkg
          path: |
            bin/Release/LibreHardwareMonitorLib.*.nupkg

      - name: Publish to NuGet
        run: nuget push **\*.nupkg -Source 'https://api.nuget.org/v3/index.json' -ApiKey ${{secrets.NUGET_API_KEY}}
